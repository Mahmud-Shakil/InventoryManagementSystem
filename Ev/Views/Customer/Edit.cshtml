@model Ev.Models.ViewModel.CustomerViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create", "Customer", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<div class="col-md-5 mx-auto">
    <h2>Update Customer</h2>
    @Html.HiddenFor(model => model.CustomerId)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group mb-3">
        @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-3">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-3">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-3">
        @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-3">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-3">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-3 position-relative">
        @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
        @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-3">
        @Html.LabelFor(model => model.CategoryType, htmlAttributes: new { @class = "form-label" })
        @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.Categories, "CategoryId", "CategoryType"), "Select Category", new { @class = "form-select " })
        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
    </div>
    <div class="from-group mb-3">
        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "form-label" })
        @Html.DropDownListFor(model => model.ProductId, new SelectList(ViewBag.Products, "ProductId", "ProductName"), "Select Product", new { @class = "form-select", @id = "dropDownProduct" })

    </div>
    <div class="form-group mb-3">
        @Html.LabelFor(model => model.SupplierName, htmlAttributes: new { @class = "form-label" })
        @Html.DropDownListFor(model => model.ProductId, new SelectList(ViewBag.Suppliers, "SupplierId", "SupplierName"), "Select a Supplier", new { @class = "form-select", @id = "dropDownSupplier" })
    </div>
    <div class="form-group mb-3 ">
        @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "form-label mb-3" })<br />
        <img src="@Url.Content(Model.ImageUrl)" alt="@Model.ImageName" height="80" width="80" class="changeEdit" />
        <input type="file" id="imageChange1" name="ImageFile" class="form-control imageChange" />
    </div>
    <div class="form-group mb-3">
        <input type="submit" value="Update" class="btn btn-lg btn-info" />
    </div>
    @Html.ActionLink("Return To List", "Index")
</div>
}
<script src="~/Scripts/jquery-3.6.0.min.js"></script>

<script>
    $(function () {
        $('.imageChange').change(function () {
            var input = this;
            if (input.files) {
                var rdr = new FileReader();
                rdr.onload = function (e) {
                    $('.changeEdit').attr('src', e.target.result);
                }
                rdr.readAsDataURL(input.files[0]);
            }
        })
    })
</script>
<script>
    $(function () {
        $.ajax({
            type: "GET",
            url: "/Customer/GetProduct",
            dataType: "Json",
            success: function (data) {
                $.each(data, function (index, value) {
                    $('#dropDownProduct').append('<option value="' + value.ProductId + '">' + value.ProductName + '</option>')
                });
            }
        });
        $('#dropDownProduct').change(function () {
            $('#dropDownSupplier').empty();
            $.ajax({
                type: "POST",
                url: "/Customer/GetProductBySupplierId",
                dataType: "Json",
                data: { ProductId: $('#dropDownProduct').val() },
                success: function (data) {
                    $.each(data, function (index, value) {
                        $('#dropDownSupplier').append('<option value="' + value.SupplierId + '">' + value.SupplierName + '</option>')
                    });
                }
            })
        })
    })
</script>

